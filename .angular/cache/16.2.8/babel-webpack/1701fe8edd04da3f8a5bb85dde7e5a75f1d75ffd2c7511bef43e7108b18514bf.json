{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/router\";\nexport class SignupComponent {\n  // hasSubmitted: boolean;\n  // get username(){ return this.loginForm.get('username'); }\n  // get password(){ return this.loginForm.get('password'); }\n  constructor(fb) {\n    this.fb = fb;\n    // this.loginForm = this.fb.group({\n    //   username : ['',[Validators.required, Validators.pattern(\"^[a-zA-Z0-9\\-]+$\")]],\n    //   password : ['',[Validators.required, Validators.minLength(6)]]\n    // });\n  }\n\n  ngOnInit() {}\n  onSubmit() {\n    // this.hasSubmitted = true;\n    //console.log(this.loginForm.value);\n    // const token = this.authService.authUser(this.loginForm.value);\n    // if (this.loginForm.valid) {\n    // if(token){ //if user have some value it will check and validate\n    // localStorage.setItem('token',token.username);\n    // alertify.success('You have logged in successfully');\n    // this.router.navigate(['/special']);\n  }\n  static #_ = this.ɵfac = function SignupComponent_Factory(t) {\n    return new (t || SignupComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: SignupComponent,\n    selectors: [[\"app-signup\"]],\n    decls: 29,\n    vars: 0,\n    consts: [[1, \"container\"], [1, \"justify-content-center\", \"align-items-center\"], [1, \"form-group\"], [\"formControlName\", \"username\", \"type\", \"text\", \"placeholder\", \"Create a username\", 1, \"form-control\"], [1, \"text-danger\"], [\"formControlName\", \"password\", \"type\", \"text\", \"placeholder\", \"Create a Password\", \"id\", \"password\", \"autocomplete\", \"off\", 1, \"form-control\"], [\"routerLink\", \"/reg\", \"type\", \"button\", 1, \"btn\", \"btn-secondary\", \"m-2\"], [\"type\", \"submit\", \"value\", \"Login\", 1, \"btn\", \"btn-primary\", \"float-right\", \"m-2\"]],\n    template: function SignupComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"p\");\n        i0.ɵɵtext(1, \"signup works!\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"div\", 0)(3, \"h1\");\n        i0.ɵɵtext(4, \"Login Page by Angular\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(5, \"hr\");\n        i0.ɵɵelementStart(6, \"div\", 1)(7, \"form\")(8, \"div\", 2)(9, \"label\");\n        i0.ɵɵtext(10, \"User Id : \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(11, \"input\", 3);\n        i0.ɵɵelementStart(12, \"div\")(13, \"small\", 4);\n        i0.ɵɵtext(14, \"username is required\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"small\", 4);\n        i0.ɵɵtext(16, \"There should not be any special character in username\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(17, \"div\", 2)(18, \"label\");\n        i0.ɵɵtext(19, \"Password : \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(20, \"input\", 5);\n        i0.ɵɵelementStart(21, \"div\")(22, \"small\", 4);\n        i0.ɵɵtext(23, \"Password is required\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(24, \"small\", 4);\n        i0.ɵɵtext(25, \"Password should be minimum 6 characters\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(26, \"button\", 6);\n        i0.ɵɵtext(27, \"Not Registered? Register Here\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(28, \"input\", 7);\n        i0.ɵɵelementEnd()()();\n      }\n    },\n    dependencies: [i2.RouterLink],\n    styles: [\"body[_ngcontent-%COMP%] {\\n    margin: 10px 10px 30px 10px;\\n}\\n\\nh1[_ngcontent-%COMP%] {\\n    text-align: center;\\n    color: #5f0177;\\n    font-family: 'Trebuchet MS', 'Lucida Sans Unicode', 'Lucida Grande', 'Lucida Sans', Arial, sans-serif;\\n}\\n\\n#pass[_ngcontent-%COMP%], #user[_ngcontent-%COMP%], #value1[_ngcontent-%COMP%], #value2[_ngcontent-%COMP%], #confirmPassword[_ngcontent-%COMP%] {\\n    color: red;\\n    display: none;\\n}\\n\\n.input_values[_ngcontent-%COMP%] {\\n    text-align: center;\\n    color: #01725a;\\n}\\n\\n#password[_ngcontent-%COMP%] {\\n    -webkit-text-security: disc;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvcGFnZXMvc2lnbnVwL3NpZ251cC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksMkJBQTJCO0FBQy9COztBQUVBO0lBQ0ksa0JBQWtCO0lBQ2xCLGNBQWM7SUFDZCxxR0FBcUc7QUFDekc7O0FBRUE7Ozs7O0lBS0ksVUFBVTtJQUNWLGFBQWE7QUFDakI7O0FBRUE7SUFDSSxrQkFBa0I7SUFDbEIsY0FBYztBQUNsQjs7QUFFQTtJQUNJLDJCQUEyQjtBQUMvQiIsInNvdXJjZXNDb250ZW50IjpbImJvZHkge1xyXG4gICAgbWFyZ2luOiAxMHB4IDEwcHggMzBweCAxMHB4O1xyXG59XHJcblxyXG5oMSB7XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICBjb2xvcjogIzVmMDE3NztcclxuICAgIGZvbnQtZmFtaWx5OiAnVHJlYnVjaGV0IE1TJywgJ0x1Y2lkYSBTYW5zIFVuaWNvZGUnLCAnTHVjaWRhIEdyYW5kZScsICdMdWNpZGEgU2FucycsIEFyaWFsLCBzYW5zLXNlcmlmO1xyXG59XHJcblxyXG4jcGFzcyxcclxuI3VzZXIsXHJcbiN2YWx1ZTEsXHJcbiN2YWx1ZTIsXHJcbiNjb25maXJtUGFzc3dvcmQge1xyXG4gICAgY29sb3I6IHJlZDtcclxuICAgIGRpc3BsYXk6IG5vbmU7XHJcbn1cclxuXHJcbi5pbnB1dF92YWx1ZXMge1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgY29sb3I6ICMwMTcyNWE7XHJcbn1cclxuXHJcbiNwYXNzd29yZCB7XHJcbiAgICAtd2Via2l0LXRleHQtc2VjdXJpdHk6IGRpc2M7XHJcbn0iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n  });\n}","map":{"version":3,"names":["SignupComponent","constructor","fb","ngOnInit","onSubmit","_","i0","ɵɵdirectiveInject","i1","FormBuilder","_2","selectors","decls","vars","consts","template","SignupComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelement"],"sources":["D:\\FYP\\FrontEnd\\Best-Buy\\src\\app\\pages\\signup\\signup.component.ts","D:\\FYP\\FrontEnd\\Best-Buy\\src\\app\\pages\\signup\\signup.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.css']\n})\nexport class SignupComponent {\n\n  loginForm: FormGroup | undefined;\n  // hasSubmitted: boolean;\n\n  // get username(){ return this.loginForm.get('username'); }\n  // get password(){ return this.loginForm.get('password'); }\n\n  constructor(private fb: FormBuilder) {\n    // this.loginForm = this.fb.group({\n    //   username : ['',[Validators.required, Validators.pattern(\"^[a-zA-Z0-9\\-]+$\")]],\n    //   password : ['',[Validators.required, Validators.minLength(6)]]\n    // });\n  }\n  ngOnInit(): void { }\n\n  onSubmit() {\n    // this.hasSubmitted = true;\n    //console.log(this.loginForm.value);\n    // const token = this.authService.authUser(this.loginForm.value);\n    // if (this.loginForm.valid) {\n      // if(token){ //if user have some value it will check and validate\n        // localStorage.setItem('token',token.username);\n        // alertify.success('You have logged in successfully');\n        // this.router.navigate(['/special']);\n      }\n      // else{ //if user is null or incorrect\n      //   alert('Username or Password is wrong');\n      // }\n      \n      // this.loginForm.reset();\n      // this.hasSubmitted = false;\n    }\n    // else{\n    //   alert('Kindly fill required fields');\n    // }\n  \n\n// }\n","<p>signup works!</p>\n<div class=\"container\">\n    <h1>Login Page by Angular</h1>\n    <hr>\n\n    <div class=\"justify-content-center align-items-center\">\n        <form>\n            <div class=\"form-group\">\n                <label>User Id : </label>\n                <input formControlName=\"username\" type=\"text\" class=\"form-control\" placeholder=\"Create a username\">\n                <div >\n                    <small class=\"text-danger\">username is required</small>\n                    <small class=\"text-danger\">There should not be any special character in username</small>\n                </div>\n            </div>\n\n            <div class=\"form-group\">\n                <label>Password : </label>\n                <input formControlName=\"password\" type=\"text\" class=\"form-control\" placeholder=\"Create a Password\" id=\"password\" autocomplete=\"off\">\n                <div>\n                    <small class=\"text-danger\">Password is required</small>\n                    <small class=\"text-danger\">Password should be minimum 6 characters</small>\n                </div>\n            </div>\n\n            <button routerLink=\"/reg\" type=\"button\" class=\"btn btn-secondary m-2\">Not Registered? Register Here</button>\n            <input type=\"submit\" class=\"btn btn-primary float-right m-2\" value=\"Login\">\n            <!--<h5 *ngIf=\"success\" class=\"successs mt-4\">Login successful</h5>-->\n        </form>\n\n        <!--{{loginForm.value | json}}\n        <div *ngIf=\"success\" class=\"results\">\n            <strong>username entered : </strong>\n            <span>{{loginForm.controls.userId.value}}</span><br>\n            <strong>Password entered : </strong>\n            <span>{{loginForm.controls.pass.value}}</span>\n        </div>-->\n    </div>\n</div>"],"mappings":";;;AAQA,OAAM,MAAOA,eAAe;EAG1B;EAEA;EACA;EAEAC,YAAoBC,EAAe;IAAf,KAAAA,EAAE,GAAFA,EAAE;IACpB;IACA;IACA;IACA;EACF;;EACAC,QAAQA,CAAA,GAAW;EAEnBC,QAAQA,CAAA;IACN;IACA;IACA;IACA;IACE;IACE;IACA;IACA;EAAA;EACD,QAAAC,CAAA,G;qBAzBML,eAAe,EAAAM,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,WAAA;EAAA;EAAA,QAAAC,EAAA,G;UAAfV,eAAe;IAAAW,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,yBAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCR5BX,EAAA,CAAAa,cAAA,QAAG;QAAAb,EAAA,CAAAc,MAAA,oBAAa;QAAAd,EAAA,CAAAe,YAAA,EAAI;QACpBf,EAAA,CAAAa,cAAA,aAAuB;QACfb,EAAA,CAAAc,MAAA,4BAAqB;QAAAd,EAAA,CAAAe,YAAA,EAAK;QAC9Bf,EAAA,CAAAgB,SAAA,SAAI;QAEJhB,EAAA,CAAAa,cAAA,aAAuD;QAGpCb,EAAA,CAAAc,MAAA,kBAAU;QAAAd,EAAA,CAAAe,YAAA,EAAQ;QACzBf,EAAA,CAAAgB,SAAA,gBAAmG;QACnGhB,EAAA,CAAAa,cAAA,WAAM;QACyBb,EAAA,CAAAc,MAAA,4BAAoB;QAAAd,EAAA,CAAAe,YAAA,EAAQ;QACvDf,EAAA,CAAAa,cAAA,gBAA2B;QAAAb,EAAA,CAAAc,MAAA,6DAAqD;QAAAd,EAAA,CAAAe,YAAA,EAAQ;QAIhGf,EAAA,CAAAa,cAAA,cAAwB;QACbb,EAAA,CAAAc,MAAA,mBAAW;QAAAd,EAAA,CAAAe,YAAA,EAAQ;QAC1Bf,EAAA,CAAAgB,SAAA,gBAAoI;QACpIhB,EAAA,CAAAa,cAAA,WAAK;QAC0Bb,EAAA,CAAAc,MAAA,4BAAoB;QAAAd,EAAA,CAAAe,YAAA,EAAQ;QACvDf,EAAA,CAAAa,cAAA,gBAA2B;QAAAb,EAAA,CAAAc,MAAA,+CAAuC;QAAAd,EAAA,CAAAe,YAAA,EAAQ;QAIlFf,EAAA,CAAAa,cAAA,iBAAsE;QAAAb,EAAA,CAAAc,MAAA,qCAA6B;QAAAd,EAAA,CAAAe,YAAA,EAAS;QAC5Gf,EAAA,CAAAgB,SAAA,gBAA2E;QAE/EhB,EAAA,CAAAe,YAAA,EAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}