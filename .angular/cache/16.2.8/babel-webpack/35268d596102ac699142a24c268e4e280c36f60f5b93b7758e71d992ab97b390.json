{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let SignupComponent = class SignupComponent {\n  get username() {\n    return this.loginForm.get('username');\n  }\n  get password() {\n    return this.loginForm.get('password');\n  }\n  constructor(fb) {\n    this.fb = fb;\n    // this.loginForm = this.fb.group({\n    //   username : ['',[Validators.required, Validators.pattern(\"^[a-zA-Z0-9\\-]+$\")]],\n    //   password : ['',[Validators.required, Validators.minLength(6)]]\n    // });\n  }\n\n  ngOnInit() {}\n  onSubmit() {\n    // this.hasSubmitted = true;\n    //console.log(this.loginForm.value);\n    // const token = this.authService.authUser(this.loginForm.value);\n    if (this.loginForm.valid) {\n      // if(token){ //if user have some value it will check and validate\n      // localStorage.setItem('token',token.username);\n      // alertify.success('You have logged in successfully');\n      // this.router.navigate(['/special']);\n    } else {\n      //if user is null or incorrect\n      alert('Username or Password is wrong');\n    }\n    this.loginForm.reset();\n    // this.hasSubmitted = false;\n  }\n};\n\nSignupComponent = __decorate([Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.css']\n})], SignupComponent);\n// }","map":{"version":3,"names":["Component","SignupComponent","username","loginForm","get","password","constructor","fb","ngOnInit","onSubmit","valid","alert","reset","__decorate","selector","templateUrl","styleUrls"],"sources":["D:\\FYP\\FrontEnd\\Best-Buy\\src\\app\\pages\\signup\\signup.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.css']\n})\nexport class SignupComponent {\n\n  loginForm: FormGroup;\n  hasSubmitted: boolean;\n\n  get username(){ return this.loginForm.get('username'); }\n  get password(){ return this.loginForm.get('password'); }\n\n  constructor(private fb: FormBuilder) {\n    // this.loginForm = this.fb.group({\n    //   username : ['',[Validators.required, Validators.pattern(\"^[a-zA-Z0-9\\-]+$\")]],\n    //   password : ['',[Validators.required, Validators.minLength(6)]]\n    // });\n  }\n  ngOnInit(): void { }\n\n  onSubmit() {\n    // this.hasSubmitted = true;\n    //console.log(this.loginForm.value);\n    // const token = this.authService.authUser(this.loginForm.value);\n    if (this.loginForm.valid) {\n      // if(token){ //if user have some value it will check and validate\n        // localStorage.setItem('token',token.username);\n        // alertify.success('You have logged in successfully');\n        // this.router.navigate(['/special']);\n      }\n      else{ //if user is null or incorrect\n        alert('Username or Password is wrong');\n      }\n      \n      this.loginForm.reset();\n      // this.hasSubmitted = false;\n    }\n    // else{\n    //   alert('Kindly fill required fields');\n    // }\n  }\n\n// }\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AAQlC,WAAMC,eAAe,GAArB,MAAMA,eAAe;EAK1B,IAAIC,QAAQA,CAAA;IAAI,OAAO,IAAI,CAACC,SAAS,CAACC,GAAG,CAAC,UAAU,CAAC;EAAE;EACvD,IAAIC,QAAQA,CAAA;IAAI,OAAO,IAAI,CAACF,SAAS,CAACC,GAAG,CAAC,UAAU,CAAC;EAAE;EAEvDE,YAAoBC,EAAe;IAAf,KAAAA,EAAE,GAAFA,EAAE;IACpB;IACA;IACA;IACA;EACF;;EACAC,QAAQA,CAAA,GAAW;EAEnBC,QAAQA,CAAA;IACN;IACA;IACA;IACA,IAAI,IAAI,CAACN,SAAS,CAACO,KAAK,EAAE;MACxB;MACE;MACA;MACA;IAAA,CACD,MACG;MAAE;MACJC,KAAK,CAAC,+BAA+B,CAAC;;IAGxC,IAAI,CAACR,SAAS,CAACS,KAAK,EAAE;IACtB;EACF;CAID;;AApCUX,eAAe,GAAAY,UAAA,EAL3Bb,SAAS,CAAC;EACTc,QAAQ,EAAE,YAAY;EACtBC,WAAW,EAAE,yBAAyB;EACtCC,SAAS,EAAE,CAAC,wBAAwB;CACrC,CAAC,C,EACWf,eAAe,CAoCzB;AAEH"},"metadata":{},"sourceType":"module","externalDependencies":[]}