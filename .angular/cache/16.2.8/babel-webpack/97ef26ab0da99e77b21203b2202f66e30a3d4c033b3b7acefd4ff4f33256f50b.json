{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/router\";\nfunction SignupComponent_div_12_small_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 10);\n    i0.ɵɵtext(1, \"username is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction SignupComponent_div_12_small_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 10);\n    i0.ɵɵtext(1, \"There should not be any special character in username\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction SignupComponent_div_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, SignupComponent_div_12_small_1_Template, 2, 0, \"small\", 9);\n    i0.ɵɵtemplate(2, SignupComponent_div_12_small_2_Template, 2, 0, \"small\", 9);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.username.errors == null ? null : ctx_r0.username.errors.required);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.username.errors == null ? null : ctx_r0.username.errors.pattern);\n  }\n}\nfunction SignupComponent_div_17_small_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 10);\n    i0.ɵɵtext(1, \"Password is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction SignupComponent_div_17_small_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 10);\n    i0.ɵɵtext(1, \"Password should be minimum 6 characters\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction SignupComponent_div_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, SignupComponent_div_17_small_1_Template, 2, 0, \"small\", 9);\n    i0.ɵɵtemplate(2, SignupComponent_div_17_small_2_Template, 2, 0, \"small\", 9);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.password.errors == null ? null : ctx_r1.password.errors.required);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.password.errors == null ? null : ctx_r1.password.errors.minlength);\n  }\n}\nexport class SignupComponent {\n  get username() {\n    return this.loginForm.get('username');\n  }\n  get password() {\n    return this.loginForm.get('password');\n  }\n  constructor(fb) {\n    this.fb = fb;\n    // this.loginForm = this.fb.group({\n    //   username : ['',[Validators.required, Validators.pattern(\"^[a-zA-Z0-9\\-]+$\")]],\n    //   password : ['',[Validators.required, Validators.minLength(6)]]\n    // });\n  }\n\n  ngOnInit() {}\n  onSubmit() {\n    // this.hasSubmitted = true;\n    //console.log(this.loginForm.value);\n    // const token = this.authService.authUser(this.loginForm.value);\n    if (this.loginForm.valid) {\n      // if(token){ //if user have some value it will check and validate\n      // localStorage.setItem('token',token.username);\n      // alertify.success('You have logged in successfully');\n      // this.router.navigate(['/special']);\n    } else {\n      //if user is null or incorrect\n      alert('Username or Password is wrong');\n    }\n    this.loginForm.reset();\n    // this.hasSubmitted = false;\n  }\n  static #_ = this.ɵfac = function SignupComponent_Factory(t) {\n    return new (t || SignupComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: SignupComponent,\n    selectors: [[\"app-signup\"]],\n    decls: 21,\n    vars: 7,\n    consts: [[1, \"container\"], [1, \"justify-content-center\", \"align-items-center\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\"], [\"formControlName\", \"username\", \"type\", \"text\", \"placeholder\", \"Create a username\", 1, \"form-control\"], [4, \"ngIf\"], [\"formControlName\", \"password\", \"type\", \"text\", \"placeholder\", \"Create a Password\", \"id\", \"password\", \"autocomplete\", \"off\", 1, \"form-control\"], [\"routerLink\", \"/reg\", \"type\", \"button\", 1, \"btn\", \"btn-secondary\", \"m-2\"], [\"type\", \"submit\", \"value\", \"Login\", 1, \"btn\", \"btn-primary\", \"float-right\", \"m-2\"], [\"class\", \"text-danger\", 4, \"ngIf\"], [1, \"text-danger\"]],\n    template: function SignupComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"p\");\n        i0.ɵɵtext(1, \"signup works!\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"div\", 0)(3, \"h1\");\n        i0.ɵɵtext(4, \"Login Page by Angular\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(5, \"hr\");\n        i0.ɵɵelementStart(6, \"div\", 1)(7, \"form\", 2);\n        i0.ɵɵlistener(\"ngSubmit\", function SignupComponent_Template_form_ngSubmit_7_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelementStart(8, \"div\", 3)(9, \"label\");\n        i0.ɵɵtext(10, \"User Id : \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(11, \"input\", 4);\n        i0.ɵɵtemplate(12, SignupComponent_div_12_Template, 3, 2, \"div\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"div\", 3)(14, \"label\");\n        i0.ɵɵtext(15, \"Password : \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(16, \"input\", 6);\n        i0.ɵɵtemplate(17, SignupComponent_div_17_Template, 3, 2, \"div\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(18, \"button\", 7);\n        i0.ɵɵtext(19, \"Not Registered? Register Here\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(20, \"input\", 8);\n        i0.ɵɵelementEnd()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\n        i0.ɵɵadvance(4);\n        i0.ɵɵclassProp(\"is-invalid\", ctx.username.invalid && (ctx.username.touched || ctx.hasSubmitted));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.username.invalid && (ctx.username.touched || ctx.hasSubmitted));\n        i0.ɵɵadvance(4);\n        i0.ɵɵclassProp(\"is-invalid\", ctx.password.invalid && (ctx.password.touched || ctx.hasSubmitted));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.password.invalid && (ctx.password.touched || ctx.hasSubmitted));\n      }\n    },\n    dependencies: [i2.NgIf, i3.RouterLink],\n    styles: [\"body[_ngcontent-%COMP%] {\\n    margin: 10px 10px 30px 10px;\\n}\\n\\nh1[_ngcontent-%COMP%] {\\n    text-align: center;\\n    color: #5f0177;\\n    font-family: 'Trebuchet MS', 'Lucida Sans Unicode', 'Lucida Grande', 'Lucida Sans', Arial, sans-serif;\\n}\\n\\n#pass[_ngcontent-%COMP%], #user[_ngcontent-%COMP%], #value1[_ngcontent-%COMP%], #value2[_ngcontent-%COMP%], #confirmPassword[_ngcontent-%COMP%] {\\n    color: red;\\n    display: none;\\n}\\n\\n.input_values[_ngcontent-%COMP%] {\\n    text-align: center;\\n    color: #01725a;\\n}\\n\\n#password[_ngcontent-%COMP%] {\\n    -webkit-text-security: disc;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvcGFnZXMvc2lnbnVwL3NpZ251cC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksMkJBQTJCO0FBQy9COztBQUVBO0lBQ0ksa0JBQWtCO0lBQ2xCLGNBQWM7SUFDZCxxR0FBcUc7QUFDekc7O0FBRUE7Ozs7O0lBS0ksVUFBVTtJQUNWLGFBQWE7QUFDakI7O0FBRUE7SUFDSSxrQkFBa0I7SUFDbEIsY0FBYztBQUNsQjs7QUFFQTtJQUNJLDJCQUEyQjtBQUMvQiIsInNvdXJjZXNDb250ZW50IjpbImJvZHkge1xyXG4gICAgbWFyZ2luOiAxMHB4IDEwcHggMzBweCAxMHB4O1xyXG59XHJcblxyXG5oMSB7XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICBjb2xvcjogIzVmMDE3NztcclxuICAgIGZvbnQtZmFtaWx5OiAnVHJlYnVjaGV0IE1TJywgJ0x1Y2lkYSBTYW5zIFVuaWNvZGUnLCAnTHVjaWRhIEdyYW5kZScsICdMdWNpZGEgU2FucycsIEFyaWFsLCBzYW5zLXNlcmlmO1xyXG59XHJcblxyXG4jcGFzcyxcclxuI3VzZXIsXHJcbiN2YWx1ZTEsXHJcbiN2YWx1ZTIsXHJcbiNjb25maXJtUGFzc3dvcmQge1xyXG4gICAgY29sb3I6IHJlZDtcclxuICAgIGRpc3BsYXk6IG5vbmU7XHJcbn1cclxuXHJcbi5pbnB1dF92YWx1ZXMge1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgY29sb3I6ICMwMTcyNWE7XHJcbn1cclxuXHJcbiNwYXNzd29yZCB7XHJcbiAgICAtd2Via2l0LXRleHQtc2VjdXJpdHk6IGRpc2M7XHJcbn0iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n  });\n}","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵtemplate","SignupComponent_div_12_small_1_Template","SignupComponent_div_12_small_2_Template","ɵɵadvance","ɵɵproperty","ctx_r0","username","errors","required","pattern","SignupComponent_div_17_small_1_Template","SignupComponent_div_17_small_2_Template","ctx_r1","password","minlength","SignupComponent","loginForm","get","constructor","fb","ngOnInit","onSubmit","valid","alert","reset","_","ɵɵdirectiveInject","i1","FormBuilder","_2","selectors","decls","vars","consts","template","SignupComponent_Template","rf","ctx","ɵɵelement","ɵɵlistener","SignupComponent_Template_form_ngSubmit_7_listener","SignupComponent_div_12_Template","SignupComponent_div_17_Template","ɵɵclassProp","invalid","touched","hasSubmitted"],"sources":["D:\\FYP\\FrontEnd\\Best-Buy\\src\\app\\pages\\signup\\signup.component.ts","D:\\FYP\\FrontEnd\\Best-Buy\\src\\app\\pages\\signup\\signup.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.css']\n})\nexport class SignupComponent {\n\n  loginForm: FormGroup;\n  hasSubmitted: boolean;\n\n  get username(){ return this.loginForm.get('username'); }\n  get password(){ return this.loginForm.get('password'); }\n\n  constructor(private fb: FormBuilder) {\n    // this.loginForm = this.fb.group({\n    //   username : ['',[Validators.required, Validators.pattern(\"^[a-zA-Z0-9\\-]+$\")]],\n    //   password : ['',[Validators.required, Validators.minLength(6)]]\n    // });\n  }\n  ngOnInit(): void { }\n\n  onSubmit() {\n    // this.hasSubmitted = true;\n    //console.log(this.loginForm.value);\n    // const token = this.authService.authUser(this.loginForm.value);\n    if (this.loginForm.valid) {\n      // if(token){ //if user have some value it will check and validate\n        // localStorage.setItem('token',token.username);\n        // alertify.success('You have logged in successfully');\n        // this.router.navigate(['/special']);\n      }\n      else{ //if user is null or incorrect\n        alert('Username or Password is wrong');\n      }\n      \n      this.loginForm.reset();\n      // this.hasSubmitted = false;\n    }\n    // else{\n    //   alert('Kindly fill required fields');\n    // }\n  }\n\n// }\n","<p>signup works!</p>\n<div class=\"container\">\n    <h1>Login Page by Angular</h1>\n    <hr>\n\n    <div class=\"justify-content-center align-items-center\">\n        <form [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\">\n            <div class=\"form-group\">\n                <label>User Id : </label>\n                <input [class.is-invalid]=\"username.invalid && (username.touched || hasSubmitted)\" formControlName=\"username\" type=\"text\" class=\"form-control\" placeholder=\"Create a username\">\n                <div *ngIf=\"username.invalid && (username.touched || hasSubmitted)\">\n                    <small *ngIf=\"username.errors?.required\" class=\"text-danger\">username is required</small>\n                    <small *ngIf=\"username.errors?.pattern\" class=\"text-danger\">There should not be any special character in username</small>\n                </div>\n            </div>\n\n            <div class=\"form-group\">\n                <label>Password : </label>\n                <input [class.is-invalid]=\"password.invalid && (password.touched || hasSubmitted)\" formControlName=\"password\" type=\"text\" class=\"form-control\" placeholder=\"Create a Password\" id=\"password\" autocomplete=\"off\">\n                <div *ngIf=\"password.invalid && (password.touched || hasSubmitted)\">\n                    <small *ngIf=\"password.errors?.required\" class=\"text-danger\">Password is required</small>\n                    <small *ngIf=\"password.errors?.minlength\" class=\"text-danger\">Password should be minimum 6 characters</small>\n                </div>\n            </div>\n\n            <button routerLink=\"/reg\" type=\"button\" class=\"btn btn-secondary m-2\">Not Registered? Register Here</button>\n            <input type=\"submit\" class=\"btn btn-primary float-right m-2\" value=\"Login\">\n            <!--<h5 *ngIf=\"success\" class=\"successs mt-4\">Login successful</h5>-->\n        </form>\n\n        <!--{{loginForm.value | json}}\n        <div *ngIf=\"success\" class=\"results\">\n            <strong>username entered : </strong>\n            <span>{{loginForm.controls.userId.value}}</span><br>\n            <strong>Password entered : </strong>\n            <span>{{loginForm.controls.pass.value}}</span>\n        </div>-->\n    </div>\n</div>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}